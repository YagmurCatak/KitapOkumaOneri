//UyeOl.cs 

using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace KitapOkumaveOnerisiUygulamasi
{
    public partial class UyeOl : Form
    {
        public UyeOl()
        {
            InitializeComponent();
        }

        public string baglanti = "Server=localhost;Database=booksdatabase;port=3306;persistsecurityinfo=True;SslMode=none;Uid=root;Pwd='1234';";
        public static int gonderilecekveri;

        private void btnKayitOl_Click(object sender, EventArgs e)
        {
            int Kontrol = 0;
            Kontrol = BosAlanKontrol();
            int kullaniciKontrol = kullaniciAdiKontrol();

            //eðer boþ olan yoksa ve kullanýcý adý daha önce oluþturulmadýysa üyelik saðlanacak. 
            if (Kontrol != 1  && kullaniciKontrol == 1)
            {
                //kullanýcý bilgilerinin tablolara eklenmesini saðlanýr. 
                int id = KullanicibilgileridatabaseEkle();
                BXUsersdataEkle(id);

                //kitaplarýn listelenip oylama yapýlacaðý sayfaya yönlendirir. 
                gonderilecekveri = id;
                KitapOylama kitap = new KitapOylama();
                kitap.Show();
                this.Hide();
            }
        }
        
        private int kullaniciAdiKontrol()
        {
            //Bu metot oluþturulan kulanýcý adýnýn daha önce varolup olmadýðýný kontrol eder. 
            
            //kullanýcýbiglileri tablosu okunacak. 
            //textbox taki kullanýcý adý ile kullanýcýbilgilerindeki kullanýcý adý eþitse uyarý verilecek ve 0 deðerini döndürecek. 
            // eþit deðilse 1 deðeri döndirecek. 

            MySqlConnection KullaniciBilgileri = new MySqlConnection(baglanti);
            KullaniciBilgileri.Open();

            //kullanici bilgileri tablosunu okuyarak kullanici ile þifresinin ayný olup olmadýðýnýn kontrolü yapýlýr
            string mysqlKullanicibilgileri = "SELECT * FROM `Tbl_kullanicibilgileri`";
            MySqlCommand cmdkullanicibilgileri = new MySqlCommand(mysqlKullanicibilgileri, KullaniciBilgileri);
            MySqlDataReader rdrKullaniciBilgileri = cmdkullanicibilgileri.ExecuteReader();

            while (rdrKullaniciBilgileri.Read())
            {
                if (rdrKullaniciBilgileri["kullaniciadi"].ToString() == txtKulaniciAdiUye.Text)
                {
                    errorUye.SetError(txtKulaniciAdiUye, "Bu kullanýcý adý kullanýlamaz.");
                    return 0;
                }
            }
            return 1;
        }
        public int BosAlanKontrol()
        {
            //Formda yer alan textboxlarýn boþ olup olmadýðýnýn kontrolünü yapan metottur. 

            int Flag = 0;
            if (txtKulaniciAdiUye.Text == "")
            {
                errorUye.SetError(txtKulaniciAdiUye, "Bir deger girmek zorundasiniz");
                Flag = 1;
            }
            if (txtKonum.Text == "")
            {
                errorUye.SetError(txtKonum, "Bir deger girmek zorundasiniz");
                Flag = 1;
            }
            if (txtYas.Text == "")
            {
                errorUye.SetError(txtYas, "Bir deger girmek zorundasiniz");
                Flag = 1;
            }
            if (txtSifre.Text == "")
            {
                errorUye.SetError(txtSifre, "Bir deger girmek zorundasiniz");
                Flag = 1;
            }
                
            return Flag;
        }

        public int KullanicibilgileridatabaseEkle()
        {
            //yeni üyenin bilgilerini kullanicibileri tablosuna ekleme iþlemini yapar. 
            //kullanici bilgilerine þifre ve kullanýcý adý eklenir. 
            //kullanýcnýn id bilgisisini döndürerek bxusers tablosuna yas ve konum bilgilerini ekelemek için kullanýlacak.  

            int KullaniciId = 0;
            string kulanicibilgileri = " ";
            MySqlConnection KullaniciBilgileri = new MySqlConnection(baglanti);
            KullaniciBilgileri.Open();

            kulanicibilgileri = "insert into tbl_kullanicibilgileri(sifre,kullaniciadi) values('" + txtSifre.Text + "','" + txtKulaniciAdiUye.Text + "')";
            MySqlCommand kullaniciBlg = new MySqlCommand(kulanicibilgileri, KullaniciBilgileri);
            kullaniciBlg.ExecuteNonQuery();
            
            //Eklenen kullanici adýnýn idsini bxusers tablosunda ilgili veriye eklemek için kullanici bilgileri tablosunu okunur. 
            string mysqlKullanicibilgileri = "SELECT * FROM `Tbl_kullanicibilgileri`";
            MySqlCommand cmdkullanicibilgileri = new MySqlCommand(mysqlKullanicibilgileri, KullaniciBilgileri);
            MySqlDataReader rdrKullaniciBilgileri = cmdkullanicibilgileri.ExecuteReader();

            while (rdrKullaniciBilgileri.Read())
            {
                if (rdrKullaniciBilgileri["kullaniciadi"].ToString() == txtKulaniciAdiUye.Text)
                {
                    KullaniciId = Convert.ToInt32(rdrKullaniciBilgileri["KullaniciID"].ToString());
                    continue;
                }
            }
            return KullaniciId;
        }
        
        public void BXUsersdataEkle(int id)
        {
            //kullanýcýnýn id sini alarak bxusers tablosunda konum yas bilgilerini ekler. 

            string BXUsers1 = " ";
            MySqlConnection BXUsers = new MySqlConnection(baglanti);
            BXUsers.Open();
           
            BXUsers1 = "insert into tbl_bxusers(konum,yas,kullanicibilgileriID) values('" + txtKonum.Text + "','" + txtYas.Text + "' , '" + id + "')";
            MySqlCommand BXUsersBlg = new MySqlCommand(BXUsers1, BXUsers);
            BXUsersBlg.ExecuteNonQuery();

            string mysqlBXUser = "SELECT * FROM `tbl_bxusers`";
            MySqlCommand cmdbxusers = new MySqlCommand(mysqlBXUser, BXUsers);
            MySqlDataReader rdrbxusers = cmdbxusers.ExecuteReader();

        }

        private void txtSifre_TextChanged(object sender, EventArgs e)
        {
            txtSifre.PasswordChar = '*';
        }

        private void txtYas_KeyPress(object sender, KeyPressEventArgs e)
        {
            //yas texboxýna karakter girilmesini önler. 
            e.Handled = !char.IsDigit(e.KeyChar) && !char.IsControl(e.KeyChar);
          
        }

       
    }
}


//OturumAc.cs
using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace KitapOkumaveOnerisiUygulamasi
{
    public partial class OturumAc : Form
    {
        public OturumAc()
        {
            InitializeComponent();
        }

        public string baglanti = "Server=localhost;Database=booksdatabase;port=3306;persistsecurityinfo=True;SslMode=none;Uid=root;Pwd='1234';";
        int flag = 0;

        private void btnGirisYap_Click(object sender, EventArgs e)
        {
            BosAlanKontrol();
            int kontrol = sifrekontrol();

            if(kontrol == 1)
            {
                //kitaplarýn listelendiði sayfanýn açýlmasýný saðlar.
                Kitaplar kitap = new Kitaplar();
                kitap.Show();
                this.Hide();
            }
            
        }

        public void BosAlanKontrol()
        {
            if (txtKullaniciAdi.Text == "")
                error.SetError(txtKullaniciAdi, "Bir deger girmek zorundasiniz");
            if (txtSifre.Text == "")
                error.SetError(txtSifre, "Bir deger girmek zorundasiniz");
        }

        public int sifrekontrol()
        {
            //kullanici bilgileri tablosunu okuyarak kullaniciadi ile þifresinin ayný olup olmadýðýnýn kontrolü yapýlýr.
            //eðer kullanici adý þifre ile eþleþiyor ise flag deðeri 1 , eþleþmiyor sa flag deðeri 0 olur ve fonksiyonun geri dönüþ deðeridir. 

            MySqlConnection KullaniciBilgileri = new MySqlConnection(baglanti);
            KullaniciBilgileri.Open();

            string mysqlKullanicibilgileri = "SELECT * FROM `Tbl_kullanicibilgileri`";
            MySqlCommand cmdkullanicibilgileri = new MySqlCommand(mysqlKullanicibilgileri, KullaniciBilgileri);
            MySqlDataReader rdrKullaniciBilgileri = cmdkullanicibilgileri.ExecuteReader();

            while (rdrKullaniciBilgileri.Read())
            {
                if (rdrKullaniciBilgileri["kullaniciadi"].ToString() == txtKullaniciAdi.Text)
                {
                    if(rdrKullaniciBilgileri["sifre"].ToString() == txtSifre.Text)
                    {
                        flag = 1;
                        continue;
                    }
                    else
                    {
                        error.SetError(txtSifre, "Þifre ile kullanýcý adý uyuþmamaktadýr. ");
                        txtSifre.Clear();
                        flag = 0;
                    }
                }
            }
            return flag;
        }

        private void txtSifre_TextChanged(object sender, EventArgs e)
        {
            txtSifre.PasswordChar = '*';
        }

        private void linkLabel1_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            YöneticiPaneli Yonetici = new YöneticiPaneli();
            Yonetici.Show();
            this.Hide();
        }
    }
}

//YöneticiPaneli.cs

using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace KitapOkumaveOnerisiUygulamasi
{
    public partial class YöneticiPaneli : Form
    {
        public YöneticiPaneli()
        {
            InitializeComponent();
            KitaplarýListele();
            KullaniciListele();
        }

        public static string kitapisbn ;
        public string baglanti = "Server=localhost;Database=booksdatabase;port=3306;persistsecurityinfo=True;SslMode=none;Uid=root;Pwd='1234';";

        private void btnOturumAC_Click(object sender, EventArgs e)
        {
            OturumAc oturum = new OturumAc();
            oturum.Show();
            this.Hide();
        }

        private void btnSil_Click(object sender, EventArgs e)
        {
            foreach (DataGridViewRow drow in grdKitap.SelectedRows)  //Seçili Satýrlarý Silme
            {
                string isbn = (drow.Cells[3].Value).ToString();
                KitapSil(isbn);
                KitaplarýListele();
            }
        }

        private void btnEkle_Click(object sender, EventArgs e)
        {
            int Flag= 0;
            Flag = Kontrol();

            if (Flag != 1)
            {
                kitapisbn = KitapEkle();
                KitaplarýListele();
                texttemizle();
            }
        }

        
        public void texttemizle()
        {
            txtKitapAdi.Clear();
            txtYazar.Clear();
            txtResim.Clear();
            txtYayýn.Clear();
            txtYayimci.Clear();
            txtisbn.Clear();
        }

        private void btnSec_Click(object sender, EventArgs e)
        {
            ResimDosyaYoluBelirle();
        }

        private void btnKullaniciSil_Click(object sender, EventArgs e)
        {
            foreach (DataGridViewRow drow in grdKullanici.SelectedRows)  //Seçili Satýrlarý Silme
            {
                String KullaniciAdi = (drow.Cells[0].Value).ToString();
                KullaniciSil(KullaniciAdi);
                KullaniciListele();
            }
        }

        public string KitapEkle()
        {
            MySqlConnection kitapeklebaglanti = new MySqlConnection(baglanti);
            kitapeklebaglanti.Open();
            string kitapEkle = "insert into tbl_bxbooks(`Image-URL-S`,booktitle,bookauthor,ýsbn,publication,publisher) values('" + txtResim.Text + "','" + txtKitapAdi.Text + "','" + txtYazar.Text + "','" +txtisbn.Text + "','" + Convert.ToInt32(txtYayýn.Text) + "','" + txtYayimci.Text + "')";

            MySqlCommand kitapeklebgl = new MySqlCommand(kitapEkle,kitapeklebaglanti);
            kitapeklebgl.ExecuteNonQuery();
            kitapeklebaglanti.Close();
            return txtisbn.Text;
        }

        private void KitaplarýListele()
        {
            /*DataGridViewImageColumn Resim = new DataGridViewImageColumn();
            grdKitapListeleme.Columns.Add(Resim);
            Resim.HeaderText = "Resim";
            */

            MySqlConnection kitapBaglanti = new MySqlConnection(baglanti);
            DataTable dt = new DataTable();
            string kitapadi = "select  `Image-URL-S`,booktitle,bookauthor,ýsbn,publication,publisher from booksdatabase.tbl_bxbooks";
            kitapBaglanti.Open();
            MySqlDataAdapter da = new MySqlDataAdapter(kitapadi, kitapBaglanti);
            da.Fill(dt);
            grdKitap.DataSource = dt;

            kitapBaglanti.Close();
        }

        private void KitapSil(string isbn)
        {
            MySqlConnection kitapSilBaglantý = new MySqlConnection(baglanti);
            string kitapSilsorgu = "DELETE FROM tbl_bxbooks where ýsbn = '" + isbn + "';";

            MySqlCommand silKomut = new MySqlCommand(kitapSilsorgu, kitapSilBaglantý);
            silKomut.Parameters.AddWithValue("@ýsbn", isbn);
            kitapSilBaglantý.Open();
            silKomut.ExecuteNonQuery();
            kitapSilBaglantý.Close();
        }

        private int Kontrol ()
        {
            int Kontrol = 0;
            if(txtisbn.Text == "")
            {
                errorKitap.SetError(txtisbn, "Bir deger girmek zorundasin");
                Kontrol = 1;
            }
            if(txtKitapAdi.Text == "")
            {
                errorKitap.SetError(txtKitapAdi, "Bir deger girmek zorundasin");
                Kontrol = 1;
            } 
            if(txtResim.Text == "")
            {
                errorKitap.SetError(txtResim, "Bir deger girmek zorundasin");
                Kontrol = 1;
            }
            if(txtYayimci.Text == "")
            {
                errorKitap.SetError(txtYayimci, "Bir deger girmek zorundasin");
                Kontrol = 1;
            }
            if(txtYayýn.Text == "")
            {
                errorKitap.SetError(txtYayýn, "Bir deger girmek zorundasin");
                Kontrol = 1;
            }
            if(txtYazar.Text == "")
            {
                errorKitap.SetError(txtYazar, "Bir deger girmek zorundasin");
                Kontrol = 1;
            }
            return Kontrol; 
        }

        private void ResimDosyaYoluBelirle()
        { 
            //https://www.ahmetcansever.com/programlama/c-veritabanina-resim-yolu-ekleme-ve-pictureboxta-gosterme/

            OpenFileDialog dosya = new OpenFileDialog();
            dosya.Filter = "Resim Dosyasý |*.jpg;*.nef;*.png |  Tüm Dosyalar |*.*";
            dosya.ShowDialog();
            string dosyayolu = dosya.FileName;
            txtResim.Text = dosyayolu;

        }

        private void KullaniciListele()
        {
            MySqlConnection kullaniciBaglanti = new MySqlConnection(baglanti);
            DataTable dt = new DataTable();
            string kullaniciSorgu = "select  kullaniciadi from booksdatabase.tbl_kullanicibilgileri";
            kullaniciBaglanti.Open();
            MySqlDataAdapter da = new MySqlDataAdapter(kullaniciSorgu, kullaniciBaglanti);
            da.Fill(dt);
            grdKullanici.DataSource = dt;

            kullaniciBaglanti.Close();
        }
       
        private void KullaniciSil(String kullaniciadi )
        {
            MySqlConnection kullaniciSilBaglantý = new MySqlConnection(baglanti);
            string kullaniciSilsorgu = "DELETE FROM tbl_kullanicibilgileri where kullaniciadi = '" + kullaniciadi + "';";

            MySqlCommand silKomut = new MySqlCommand(kullaniciSilsorgu, kullaniciSilBaglantý);
            silKomut.Parameters.AddWithValue("@kullaniciadi", kullaniciadi);
            kullaniciSilBaglantý.Open();
            silKomut.ExecuteNonQuery();
            kullaniciSilBaglantý.Close();
        }

        
    }
}

//Form1.cs
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace KitapOkumaveOnerisiUygulamasi
{
    public partial class Anasayfa : Form
    {
        public Anasayfa()
        {
            InitializeComponent();
        }

        private void btnOturumac_Click(object sender, EventArgs e)
        {
            OturumAc oturum = new OturumAc();
            oturum.Show();
            this.Hide();
        }

        private void btnUyeOl_Click(object sender, EventArgs e)
        {
            UyeOl UyeOl = new UyeOl();
            UyeOl.Show();
            this.Hide();
        }

        private void Anasayfa_Load(object sender, EventArgs e)
        {

        }
    }
}

//KitapOylama.cs

using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Security.Policy;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace KitapOkumaveOnerisiUygulamasi
{
    public partial class KitapOylama : Form
    {
        int deger;
        DataSet ds;
        MySqlDataAdapter da;

        public KitapOylama()
        {
            deger = 0;
            InitializeComponent();
            KitapListele();
            btnoylama.Visible = false;
        }

        public string baglanti = "Server=localhost;Database=booksdatabase;port=3306;persistsecurityinfo=True;SslMode=none;Uid=root;Pwd='1234';";
        public int sayac = 0;

        private void KitapListele()
        {
            DataGridViewTextBoxColumn Puan = new DataGridViewTextBoxColumn();
            grdKitapOyla.Columns.Add(Puan);
            Puan.HeaderText = "Puan";
          
            MySqlConnection kitapBaglanti = new MySqlConnection(baglanti);
            ds = new DataSet();
            string kitapadi = "select  *    from booksdatabase.tbl_bxbooks";
            kitapBaglanti.Open();
            da = new MySqlDataAdapter(kitapadi, kitapBaglanti);
            da.Fill(ds,deger,20, "booksdatabase.tbl_bxbooks");
            grdKitapOyla.DataSource = ds.Tables[0];

            kitapBaglanti.Close();
        }
        

        private string bxbookusersOku()
        {
            //uye olan kullanýcýnýn kullanici idsini elde eder. 
            string userID = " ";
            MySqlConnection users = new MySqlConnection(baglanti);
            users.Open();

            //UyeOl sayfasýndan gelen verileri alýyoruz.
            int UyeOlKulaniciID = UyeOl.gonderilecekveri;

            string mysqlusers = "SELECT * FROM `tbl_bxusers`";
            MySqlCommand cmdusers = new MySqlCommand(mysqlusers, users);
            MySqlDataReader rdrusers = cmdusers.ExecuteReader();

            while (rdrusers.Read())
            {
                if (rdrusers["kullanicibilgileriID"].ToString() == UyeOlKulaniciID.ToString())
                {
                    userID = rdrusers["idKullanici"].ToString();
                }
            }
            return userID;

        }

        private void BXbookratingEkle(int puan)
        {
            string userID = bxbookusersOku();//elde edilen kullanýcý idsini rating datasýna eklemek için deðiþkene atanýr. 
            string bookrating = " ";
            MySqlConnection BXbookrating = new MySqlConnection(baglanti);
     
            BXbookrating.Open();
            bookrating = "insert into tbl_bxbookrating(userID,ýsbn,rating) values('" + userID + "','" + grdKitapOyla.CurrentRow.Cells[4].Value.ToString() + "','" + puan + "')";

            MySqlCommand BxratingBlg = new MySqlCommand(bookrating, BXbookrating);
            BxratingBlg.ExecuteNonQuery();
            BXbookrating.Close();
        }

        public void btnoylama_Click(object sender, EventArgs e)
        {
            Kitaplar KitapListele = new Kitaplar();
            KitapListele.Show();
            this.Hide();
        }

        private void grdKitapOyla_CellEndEdit(object sender, DataGridViewCellEventArgs e)
        {
            
            //verilen puan deðerini alýyorum. 
            int puan = Convert.ToInt32(grdKitapOyla.CurrentRow.Cells[0].Value.ToString());
            BXbookratingEkle(puan);
            sayac++;
            if (sayac >= 10)
            {
                //üyelik tamamlandý. 
                lblOyla.Text = "En az 10 oylama barajýný tamamladýnýz kitap listesini görebilirsiniz.Devam etmek istemiyorsanýz Oyla butonuna basýnýz";
                btnoylama.Visible = true;
            }
        }

        private void btnSol_Click(object sender, EventArgs e)
        {
            //http://bahadirsahin23.blogspot.com/2013/11/datagridview-da-sayfalama.html

            deger = deger - 20;
            if (deger <= 0)
            {
                deger = 0;
            }
            ds.Clear();
            da.Fill(ds,deger,20, "booksdatabase.tbl_bxbooks");
        }

        private void btnSag_Click(object sender, EventArgs e)
        {
            int toplam = toplamKitapAdedi();
            deger = deger + 20;

            if(deger >= toplam)
            {
                deger = toplam - 1; 
            }
            ds.Clear();
            da.Fill(ds, deger, 20, "booksdatabase.tbl_bxbooks");
        }

        public int toplamKitapAdedi()
        {
            //toplam kitap adedini bulur. 
            int toplam = 0;
            MySqlConnection kitaplar = new MySqlConnection(baglanti);
            kitaplar.Open();
            MySqlCommand toplamBaglanti = new MySqlCommand("SELECT count(ýsbn) FROM tbl_bxbooks;", kitaplar);
            
            toplam = Convert.ToInt32(toplamBaglanti.ExecuteScalar());
            kitaplar.Close();
            return toplam;
        }
    }
}

//Kitaplar.cs
using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace KitapOkumaveOnerisiUygulamasi
{
    public partial class Kitaplar : Form
    {
        public Kitaplar()
        {
            InitializeComponent();
            KitaplarýListele();
            EniyiKitapListele();
            PopülerKitapListele();
            yeniKitapListele();
            onerilenKitaplarýListele();
        }

        public string baglanti = "Server=localhost;Database=booksdatabase;port=3306;persistsecurityinfo=True;SslMode=none;Uid=root;Pwd='1234';";

        private void grdKitapListele_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            KitapOkuma kitapOku = new KitapOkuma();
            kitapOku.Show();
            this.Hide();
        }

        private void grdEniyiKitaplar_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            KitapOkuma kitapOku = new KitapOkuma();
            kitapOku.Show();
            this.Hide();
        }

        private void grdPopülerKitaplar_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            KitapOkuma kitapOku = new KitapOkuma();
            kitapOku.Show();
            this.Hide();
        }

        private void grdYeniKitap_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            KitapOkuma kitapOku = new KitapOkuma();
            kitapOku.Show();
            this.Hide();
        }

        private void grdOneri_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            KitapOkuma kitapOku = new KitapOkuma();
            kitapOku.Show();
            this.Hide();
        }

        private void KitaplarýListele()
        {
            /*DataGridViewImageColumn Resim = new DataGridViewImageColumn();
            grdKitapListeleme.Columns.Add(Resim);
            Resim.HeaderText = "Resim";
            */

            MySqlConnection kitapBaglanti = new MySqlConnection(baglanti);
            DataTable dt = new DataTable();
            string kitapadi = "select  `Image-URL-S`,booktitle,bookauthor,ýsbn from booksdatabase.tbl_bxbooks";
            kitapBaglanti.Open();
            MySqlDataAdapter da = new MySqlDataAdapter(kitapadi, kitapBaglanti);
            da.Fill(dt);
            grdKitapListele.DataSource = dt;

            kitapBaglanti.Close();
        }

        private void EniyiKitapListele()
        {
            /*Tüm kitaplarý isbn kodlarýna göre gruplanýr. Kitaplarýn ortalama puan deðerleri bulunur. 
             * Kitaplarýn ortalama deðerleri büyükten küçüðe sýralanarak en iyi 10 kitabýn listelenmesi saðlanýr
             */

            MySqlConnection eniyikitapbaglanti = new MySqlConnection(baglanti);
            DataTable dt = new DataTable();
            string eniyikitapSorgu = "SELECT tbl_bxbooks.booktitle,AVG(rating) as ortalamaPuan from tbl_bxbooks join tbl_bxbookrating on tbl_bxbooks.ýsbn = tbl_bxbookrating.ýsbn Group By tbl_bxbookrating.ýsbn ORDER BY ortalamaPuan DESC LIMIT 10;";
            eniyikitapbaglanti.Open();
            MySqlDataAdapter da = new MySqlDataAdapter(eniyikitapSorgu, eniyikitapbaglanti);
            da.Fill(dt);
            grdEniyiKitaplar.DataSource = dt;
            eniyikitapbaglanti.Close();
        }
        
        private void PopülerKitapListele()
        {
            /*Puanlanan kitaplarýn bulunduðu tbl_bxbookrating tablo isbn kodlarýna göre gruplanýr.
             * Ayný isbn den kaç tane puanlamýþ bulunur. 
             * Bulunan bu deðerler büyükten küçüðe sýralanýr ve 10 tanesi popüler kitaplar sekmesinde listelenir. 
             */

            MySqlConnection Popülerbaglanti = new MySqlConnection(baglanti);
            DataTable dt = new DataTable();
            string popülerSorgu = "SELECT tbl_bxbooks.booktitle, COUNT(*) as adet from tbl_bxbooks join tbl_bxbookrating on tbl_bxbooks.ýsbn = tbl_bxbookrating.ýsbn Group By tbl_bxbookrating.ýsbn ORDER BY adet DESC LIMIT 10;";
            Popülerbaglanti.Open();
            MySqlDataAdapter da = new MySqlDataAdapter(popülerSorgu, Popülerbaglanti);
            da.Fill(dt);
            grdPopülerKitaplar.DataSource = dt;
            Popülerbaglanti.Close();
        }
        
        public void yeniKitapListele()
        {
            string eklenenisbn = YöneticiPaneli.kitapisbn;//yöneticinin eklediði kitabýn ýsbn deðeri. 
            MySqlConnection yenikitapbaglanti = new MySqlConnection(baglanti);
            string yeniSorgu = "SELECT booktitle from tbl_bxbooks where '" + eklenenisbn + "'= ýsbn;";
            DataTable dt = new DataTable();
            yenikitapbaglanti.Open();
            MySqlDataAdapter da = new MySqlDataAdapter(yeniSorgu,yenikitapbaglanti);
            da.Fill(dt);
            grdYeniKitap.DataSource = dt;
            yenikitapbaglanti.Close();
        }

        private void onerilenKitaplarýListele()
        {
            int toplam = toplamOylananKitapSayisi();
            MySqlConnection onerilenKitapbaglanti = new MySqlConnection(baglanti);
            /*oylanan kitaplarýn destek deðerlerini bulduk. 
            * destek deðeri 5 ten büyükse listeledik.
            */
            string oneriSorgu = "SELECT tbl_bxbooks.booktitle, COUNT(*)*100/'" + toplam + "' as destek from tbl_bxbooks join tbl_bxbookrating on tbl_bxbooks.ýsbn = tbl_bxbookrating.ýsbn Group By tbl_bxbookrating.ýsbn Having destek>5 ORDER BY destek DESC ;";
            DataTable dt = new DataTable();
            onerilenKitapbaglanti.Open();
            MySqlDataAdapter da = new MySqlDataAdapter(oneriSorgu, onerilenKitapbaglanti);
            da.Fill(dt);
            grdOneri.DataSource = dt;
            onerilenKitapbaglanti.Close();
        }

        public int toplamOylananKitapSayisi()
        {
            //toplam kitap adedini bulur. 
            int toplam = 0;
            MySqlConnection kitaplar = new MySqlConnection(baglanti);
            kitaplar.Open();
            MySqlCommand toplamBaglanti = new MySqlCommand("SELECT count(ýsbn) FROM tbl_bxbookrating;", kitaplar);

            toplam = Convert.ToInt32(toplamBaglanti.ExecuteScalar());
            kitaplar.Close();
            return toplam;
        }
    }
}

//KitapOkuma.cs

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace KitapOkumaveOnerisiUygulamasi

{
    
	public partial class KitapOkuma : Form
    
	{
        
		public KitapOkuma()
       
 		{
            
			InitializeComponent();
            
			pdf.LoadFile("C:\\Users\\Yagmur\\Desktop\\yazlabprojeleri\\Yazýlým_Lab_I\\Kohlbergin Biliþsel Ahlak Geliþimi.pdf");
        
		}
        
       
		private void btnGeri_Click(object sender, EventArgs e)
       
		{
            
			Kitaplar kitapListele = new Kitaplar();
           
			kitapListele.Show();
           
			this.Hide();
        
		}
    
	}

}